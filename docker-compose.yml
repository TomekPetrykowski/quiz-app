services:
  frontend:
    build:
      context: ./frontend/quiz_app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file: ./frontend/quiz_app/.env
    depends_on:
      # - api-service
      - feedback-service
    networks:
      - quiznet

  # api-service:
  #   build:
  #     context: ./backend/api_service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3000"
  #   env_file: ./backend/api_service/.env
  #   depends_on:
  #     - postgres
  #   networks:
  #     - quiznet
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:3000/health || curl -f http://localhost:3000/health",
  #       ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  feedback-service:
    env_file: ./backend/feedback_service/.env
    build:
      context: ./backend/feedback_service
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    depends_on:
      - mongo
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES}
      KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quiznet

  mongo:
    image: mongo:7
    volumes:
      - mongo_data:/data/db
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8080:8080"
    command: start-dev
    networks:
      - quiznet
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  mongo_data:

networks:
  quiznet:
    driver: bridge
